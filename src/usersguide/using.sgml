<!-- 
$Id: using.sgml,v 1.15 2011/01/18 18:51:54 mjk Exp $

@Copyright@
@Copyright@

$Log: using.sgml,v $
Revision 1.15  2011/01/18 18:51:54  mjk
*** empty log message ***

Revision 1.13  2011/01/03 20:55:38  mjk
- DOCS: added init mode description
- FIX: turn off GE compass (again)

Revision 1.12  2011/01/03 20:27:14  mjk
- Working (and documented) Google Earth procedure
- Simplified docs / commands for TwinView and Bezel hiding
- Removed old SAGE prereqs (better not to conflict w/ CentOS)

Revision 1.11  2010/12/18 00:27:34  mjk
*** empty log message ***

Revision 1.10  2010/09/22 21:13:53  mjk
- viz roll doc fix
- added DESCRIPTION for git (feel free to change these oneliners)
- added OWNER for git (do not change these)
see git.rocksclusters.org

Revision 1.9  2009/06/22 18:44:32  mjk
checkpoint

Revision 1.8  2009/06/19 23:39:33  mjk
*** empty log message ***

Revision 1.7  2009/06/11 23:34:02  mjk
- 32/64 bit chromium
- cleaning up the usersguide

Revision 1.6  2008/07/21 21:23:28  mjk
docs good

Revision 1.5  2006/09/21 03:21:02  mjk
cleanup manual

-->

<chapter>

<title>Using</title>

<section>
<title>Video Configuration</title>

<section>
<title>Resolution</title>

<para>
After the layout is configured and the 
<computeroutput>rocks sync tile</computeroutput> 
command is run the resolution of each tile display defaults the value
of the 
 <computeroutput>viz_tile_resoulation</computeroutput>
attribute.
You can alter the video resolution by changing this attribute and
re-syncing the video wall.  For example:

<screen>
$ su
# rocks set appliance attr tile viz_tile_resolution 1920x1200
# rocks sync tile
</screen>

</para>


</section>

<section>
<title>Bezels Height and Width</title>

<para>
The Viz Roll supports the hiding of pixels behind LCD mullions (bezels).
Without bezel hiding all images rendered on the wall will display all pixels, 
This effect can be distracting for movies and other moving images, but is
beneficial for static images and text.
Bezel hiding is performed at the visualization middle-ware layer.
The Viz Roll directly supports bezel hiding for Chromium and Google
Earth, other middleware packages have their own configuration steps to
accomplish the same thing.
</para>

<para>
All of this is controlled with attributes.  It is recommended you
carefully measure the LCD display in millimeters and record the
height and width of the viewable area, and the size of the
non-viewable bezels.  You may also use different unites (e.g. inches)
but must be consisted accross all measurements.  The viewable portion
of the monitor is represented by the 
<computeroutput>viz_tile_width</computeroutput>, and
<computeroutput>viz_tile_height</computeroutput> attributes.  The
bezel portion of the monitor is represented by the
<computeroutput>viz_tile_left_bezel</computeroutput>,
<computeroutput>viz_tile_right_bezel</computeroutput>,
<computeroutput>viz_tile_top_bezel</computeroutput>, and
<computeroutput>viz_tile_bottom_bezel</computeroutput> attributes.
</para>

<para>
If the bezel attribute are non-zero then bezel hiding is enabled.  If
you wish to disable this and render all pixels to show the bezels then
set the attributes to zero.  For example:

<screen>
$ su
# rocks set appliance attr tile viz_tile_left_bezel 0
# rocks set appliance attr tile viz_tile_right_bezel 0
# rocks set appliance attr tile viz_tile_top_bezel 0
# rocks set appliance attr tile viz_tile_bottom_bezel 0
</screen>

</para>
</section>

<section>
<title>Modes</title>

<section>
<title>Init</title>

<para>
 When a tile node is first installed, or re-installed, it is
in <emphasis>init</emphasis> mode when the video resolution is
automatically selected, and a single display X11 server is started.
This mode is only for diagnostic purposes to verify the video driver
functions correctly. 
You must place switch to one of the following modes before using the
video wall.
</para>

</section>

<section>
<title>Simple</title>
<para>
Simple mode is the default configuration.  For every
display attached to a tile a single X11 display is configured, all
running under the same X11 server.
You can switch to <emphasis>simple</emphasis> mode with the following
command (run as root):
</para>
<screen>
$ su
# rocks sync tile
</screen>
</section>

<section>
<title>Meta</title>
<para>
For walls with multiple (2, or 4) displays per
tile <emphasis>meta</emphasis> mode is used to aggregate all the
attached displays into a single X11 display.  For tiles with 2
displays this is done using TwinView.  For tiles with 4 displays two
sets of TwinView displays are created and Xinerama is then used to
create a single display.
You can switch to <emphasis>meta</emphasis> mode with the following
command (run as root):
</para>
<screen>
$ su
# rocks sync tile mode=meta
</screen>
<mediaobject>
	<imageobject>
	<imagedata fileref="images/wall-twin.png" scale=20>
	</imageobject>
	<caption><para>
	Meta mode resulting in a TwinView visualization wall.
	</para></caption>
</mediaobject>
</section>

<section>
<title>User</title>
<para>
User mode allows you to provide your own X11 configuration file rather
have Rocks manage it.  In <emphasis>user</emphasis> mode you must place
each tiles configuration file in the
directory <computeroutput>/etc/X11/xorg.conf-user-HOSTNAME</computeroutput>,
where HOSTNAME is the name of the tile machine (e.g. tile-0-0).
Once all the configuration files have been created switch
to <emphasis>user</emphasis> mode.
</para>
<screen>
$ su
# rocks sync tile mode=user
</screen>
</section>

</section>

<section>
<title>Driver</title>
<para>
The Viz Roll includes the latest (at time of release) production
nVidia driver.  If your system is connected to the Internet then
everytime you install a tile node it will automatically download and
install the latest nVidia driver.  There is no longer any need to
update the video driver manually.
</para>
</section>

<section>
<title>Power Control</title>
<para>
Automatic power savings is disabled to prevent the wall from turning
off during use.  You can explicitly turn of the displays with the
following commands.
</para>
<screen>
$ su
# rocks stop tile
# rocks start tile
</screen>
</section>

</section>

<section>
<title>Application Notes</title>

<section>
<title>Chromium</title>

<para>
Chromium is used to display the OpenGL frame of applications on the wall. 
Applications must be 64-bit and dynamically linked to the libGL.so.
Some newer applications may contain code written to a later OpenGL 
specification than is supported by Chromium, however, most application work
without any source code changes.  
</para>
  
<para>
Enabling and disabling Chromium is done on per use basis and is not a
global setting for all users. 
In the default disabled state all OpenGL applications started on the
frontend of the cluster will display normally in the frotend's X11
display.  
If Chromium is enable the application will draw the non-OpenGL
components (and window frame) on the frontend display and the OpenGL
frame will be rendered across all the tiles in the wall.  
Chromium is enabled and disabled using the following commands:
</para>

<para>
<computeroutput>$ rocks enable chromium</computeroutput>
</para>

<para>
<computeroutput>$ rocks disable chromium</computeroutput>
</para>

</section>



<section><title>Google Earth</title>

<section><title>Installation</title>

<para>
Google Earth must be downloaded and installed on the frotend and all
of the tile nodes.
Download 64bit Fedora RPM of Google Earth from earth.google.com and
save it in your home directory and do the following:
</para>

<orderedlist>

<listitem>

	<para>
	Add the RPM to the cluster software distribution.
	</para>

	<screen>
	$ cd ~
	$ su
	# cp google-earth-stable*.rpm /export/rocks/install/contrib/5.4/x86_64/RPMS/
	# cd /export/rocks/install
	# rocks create distro
	# exit
	</screen>

</listitem>

<listitem>

	<para>
	Install the RPM on the frontend, and re-install all the
	tile nodes.
	</para>

	<screen>
	$ cd ~
	$ su
	# rpm -Uhv --nodeps google-earth-stable*.rpm
	# rocks run host tile /boot/kickstart/cluster-kickstart
	# exit
	</screen>

</listitem>

<listitem>

	<para>
	Next as root sync the tile layout to all the nodes so Google
	Earth can use each display as a slave for the master instance
	running on the Frontend.
	</para>

	<screen>
	$ su
	# rocks sync tile googleearth
	# exit
	</screen>

</listitem>
</orderedlist>
</section>

<section><title>Running</title>

<para>
Each X11 display needs to run its own instance of Google Earth, this
is true even for walls with multiple displays per node.  First make
sure the wall of configured in <emphasis>simple</emphasis> mode, and
then start Google Earth all the tile nodes and the frontend.
<screen>
$ rocks start tile googleearth
$ /opt/google/earth/free/googleearth
</screen>
</para>

<para>
To exit close the controlling window on the Frontend console, and shut
down the tile node instances.
<screen>
$ rocks stop tile googleearth
</screen>
</para>

</section>

</section>


<section>
<title>CGLX</title>

<para>
A CGLX Roll is available to simplify the installation of CGLX on a
Rocks Viz Wall.
This Roll can be installed during initial cluster build, or later
after the cluster is 
deployed.  
In both cases adjustments to the multicast routing may be required.
</para>

</section>
</section>


</chapter>

